*** Settings ***
Test Teardown     Close Browser
Resource          ../Keywords/resource_config.txt

*** Test Cases ***
TM002_TC001_profile_Verify username displays correctly in Settings page.
    [Documentation]    Verify point:
    ...
    ...    -- Last name and First Name when viewing in Setting>Profile are matched with as when user registers
    open cofiddle
    create account with email
    close all new FTUE popup
    open settings page
    go to setting's sub-page    Profile
    ${tc_first name}    Get Value    ${setting_profile_first name field}
    ${tc_last name}    Get Value    ${setting_profile_last name field}
    Should Be Equal    ${tc_first name}    ${gb_first name}
    Should Be Equal    ${tc_last name}    ${gb_last name}

TM002_TC002_profile_Verify Primary email displays correctly in Settings page.
    [Setup]    setup for setting-profile test cases
    # User is in Setting > Profile page now
    ${tc_email}    Get Text    ${setting_profile_primary email field}
    Should Be Equal    ${tc_email}    ${gb_email}

TM002_TC003_profile_Verify user can change username to a new one.
    [Documentation]    Verify points:
    ...
    ...    -- Save setting notification shows after clicking Save Setting button
    ...
    ...    -- New name is match with inputted value
    [Setup]    setup for setting-profile test cases
    # User is in Setting > Profile page now
    # create a new username and input to 2 text fields
    ${tc_new first name}    generate text    6
    Input Text    ${setting_profile_first name field}    ${tc_new first name}
    ${tc_new last name}    generate text    6
    Input Text    ${setting_profile_last name field}    ${tc_new last name}
    # click save setting button
    Click Element    ${setting_save setting_button}
    # verify save setting notification shows
    Element Should Be Visible    ${setting_updated notification}
    # get name shows on top bar
    ${tc_current name}    Get Text    ${setting_username on top bar}
    # verify name on top bar match with the value inputted
    Should Be Equal    ${tc_new first name} ${tc_new last name}    ${tc_current name}

TM002_TC004_profile_Verify user can change password to a new one.
    [Documentation]    Verify points:
    ...
    ...    -- Save setting notification shows after clicking Save Setting button
    ...
    ...    -- User can login with new password
    [Setup]    setup for setting-profile test cases
    # click change password link to open change password form
    Click Element    ${setting_profile_change password link}
    Wait Until Element Is Visible    ${setting_profile_current password field}
    Wait Until Element Is Visible    ${setting_profile_new password field}
    Wait Until Element Is Visible    ${setting_profile_confirm password field}
    #input current password
    Input Text    ${setting_profile_current password field}    ${gb_password}
    Input Text    ${setting_profile_new password field}    ${gb_changed password}
    Input Text    ${setting_profile_confirm password field}    ${gb_changed password}
    # click Save setting button
    Click Element    ${setting_save setting_button}
    # verify setting saved notification is shown
    Element Should Be Visible    ${setting_updated notification}
    # logout then login again with new password
    Wait Until Element Is Not Visible    ${setting_updated notification}    #wait for the popup is dismissed
    logout
    Click Element    ${homepage_signin button}
    login    ${gb_email}    ${gb_changed password}
    # verify user can login with nuew password
    Element Should Be Visible    ${wj_left panel_recent}

TM002_TC005_Verify user can add linked email to current account.
    [Documentation]    Verify points:
    ...
    ...    -- New linked email is added and visible
    [Setup]    setup for setting-profile test cases
    ${tc_linked_email}    generate email    15
    Input Text    ${setting_profile_input linked email field}    ${tc_linked_email}
    Press Key    ${setting_profile_input linked email field}    \\13
    sleep    3s
    Element Should Be Visible    //span[@class="email-address" and contains(text(),'${tc_linked_email}')]

TM002_TC006_verify user can remove linked email from current account.
    [Documentation]    Verify points:
    ...
    ...    -- Email has just added is removed
    [Setup]    setup for setting-profile test cases
    # add a new email to linked email section
    ${tc_linked_email}    generate email    15
    Input Text    ${setting_profile_input linked email field}    ${tc_linked_email}
    Press Key    ${setting_profile_input linked email field}    \\13
    sleep    3s
    Wait Until Element Is Visible    //span[@class="email-address" and contains(text(),'${tc_linked_email}')]
    # Click trash button
    Click Element    ${setting_profile_trash button}
    sleep    3s
    # verify point: the email has just added is removed
    Element Should Not Be Visible    //span[@class="email-address" and contains(text(),'${tc_linked_email}')]

TM002_TC007_verify user can make linked email become primary email and vice versa.
    [Setup]    setup for setting-profile test cases
    # add a new email to linked email section
    ${tc_linked_email}    generate email    15
    Input Text    ${setting_profile_input linked email field}    ${tc_linked_email}
    Press Key    ${setting_profile_input linked email field}    \\13
    sleep    3s
    Wait Until Element Is Visible    //span[@class="email-address" and contains(text(),'${tc_linked_email}')]
    # go to gmail
    open and login gmail in the same browser    ${gb_gg_email id}    ${gb_gg_password}
    open gmail item with specific subject    ${gb_email subject text_email address added}
    Capture Page Screenshot    \    # capture screenshot for debug purpose
    Click Element    link=click here
    Select Window    new
    # Open setting page
    Wait Until Element Is Visible    ${wj_down arrow icon}
    open settings page
    # click primary button
    Wait Until Element Is Visible    ${setting_profile_make primary button}
    Click Element    ${setting_profile_make primary button}
    sleep    3s    # sleep 3s to wait action take effect
    # get the current primary email
    ${tc_check point}    Get Text    ${setting_profile_primary email field}
    # check point: primary email is updated
    Should Be Equal    ${tc_check point}    ${tc_linked_email}

TM002_TC008_verify user can add a new domain into excluding list and all excluded pages display in Settings page.
    [Documentation]    Verify points:
    ...
    ...    -- User can add and submit a URL, the domain of that URL is present on page
    [Setup]    setup for setting-security test cases
    # wait for page ready
    Wait Until Element Is Visible    ${setting_security_excluded email text box}
    # input a URL that is needed to exclude
    Input text    ${setting_security_excluded email text box}    ${gb_sample_excluded_url}
    # Press enter
    Press Key    ${setting_security_excluded email text box}    \\13
    # click OK on confirm popup
    Click Element    ${setting_security_confirm popup_ok button}
    #sleep to wait for web process
    sleep    3s
    # get domain that is inputted
    ${tc_domain}    get short domain from url    ${gb_sample_excluded_url}
    # get domain name that is added
    ${tc_domain added}    Get Text    ${setting_security_the first added excluded domain}
    Should Be Equal    ${tc_domain}    ${tc_domain added}

TM002_TC009_Verify user can delete a domain in excluding list.
    [Setup]    setup for setting-security test cases
    # wait for page ready
    Wait Until Element Is Visible    ${setting_security_excluded email text box}
    # input a URL that is needed to exclude
    Input text    ${setting_security_excluded email text box}    ${gb_sample_excluded_url}
    # Press enter
    Press Key    ${setting_security_excluded email text box}    \\13
    # click OK on confirm popup
    Click Element    ${setting_security_confirm popup_ok button}
    #sleep to wait for web process
    sleep    3s
    # get real location of added excluded domain
    ${tc_domain}    get domain from url    ${gb_sample_excluded_url}
    ${tc_added domain locator}    Replace String    ${setting_security_added excluded domain locator}    exurl    ${tc_domain}
    # click trash button
    Click Element    ${setting_security_excluded remove button}
    sleep    1s
    # verify added domain is not visibled on page
    Element Should Not Be Visible    ${tc_added domain locator}

TM002_TC010_verify all existing tag presented in setting-tags page
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    go to setting's sub-page    Web Journal
    # enable auto web journal
    Click Element    ${setting_web journal_switch auto web journal}
    # enable auto cache
    Click Element    ${setting_web journal_switch auto cache}
    # save setting
    Click Element    ${setting_save setting_button}
    # open sample URL in the same tab
    Go To    ${gb_sample url}
    sleep    5s
    # go back to cofiddle
    Go To    http://${environment}.neeah.cvp.io/
    Comment    Click Element    ${homepage_signin button}
    sleep    5s
    # wait for web journal page load complete
    Wait Until Element Is Visible    ${wj_first item domain}
    # generate a tag name
    ${gb_sample tag name}    generate text    5
    # input tag to text field
    ${wj_note and tag field}    return true locator for text area of the first item
    Click Element    ${wj_note and tag field}
    Input Text    ${wj_note and tag field}    \#${gb_sample tag name}
    Press Key    ${wj_note and tag field}    \\13
    # open setting > Tag
    open settings page
    go to setting's sub-page    Tags
    # verify tag is presented in Tags page
    Element Should Be Visible    //label[@class="tag-of-user" and @title="${gb_sample tag name}"]

TM002_TC011_verify user can add a new tag and that tag is pinned
    [Documentation]    Verify points:
    ...
    ...    -- Verify new tag is added and presented on page
    ...
    ...    -- Get pinned value of newly added tag. Verify its value is 1
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    # CURRENTLY WE FOUNDED A BUG IN SETTING > TAGS WHEN THERE IS NO TAG, THE ADDING TAG TEXTBOX IS NOT PRESENT. WE IMPLEMENT THIS TEST CASE WITH WORKAROUND WAY BY ADDING A TAG FROM WEB JOURNAL PAGE FIRST
    Log To Console    Starting work around
    go to setting's sub-page    Web Journal
    # enable auto web journal
    Click Element    ${setting_web journal_switch auto web journal}
    # enable auto cache
    Click Element    ${setting_web journal_switch auto cache}
    # save setting
    Click Element    ${setting_save setting_button}
    # open sample URL in the same tab
    Go To    ${gb_sample url}
    sleep    5s
    # go back to cofiddle
    Go To    http://${environment}.neeah.cvp.io/
    Comment    Click Element    ${homepage_signin button}
    sleep    5s
    # wait for web journal page load complete
    Wait Until Element Is Visible    ${wj_first item domain}
    # generate a tag name
    ${gb_sample tag name}    generate text    5
    # input tag to text field
    ${wj_note and tag field}    return true locator for text area of the first item
    Click Element    ${wj_note and tag field}
    Input Text    ${wj_note and tag field}    \#${gb_sample tag name}
    Press Key    ${wj_note and tag field}    \\13
    # open setting > Tag
    open settings page
    go to setting's sub-page    Tags
    # END OF WORKAROUND
    Log To Console    END OF WORK AROUND
    # add a new tag
    Click Element    ${setting_tags_add tag textbox}
    ${tc_new tag}    generate text    10
    Input Text    ${setting_tags_add tag textbox}    ${tc_new tag}
    Press Key    ${setting_tags_add tag textbox}    \\13
    sleep    1s
    # delete the first tag
    Click Element    ${setting_tags_first trash button}
    Click Element    ${setting_security_confirm popup_ok button}
    sleep    1s
    ${tc_has just added tag name}    Get Text    ${setting_tags_first added name tag field}
    # VERIFY POINT: tag that has just added is presented on page
    Should Be Equal    ${tc_has just added tag name}    ${tc_new tag}
    # get pinned value of the first tag
    ${tc_pinned value}    Get Value    ${setting_tags_first pinned value container}
    # verify new added tag is a pinned tag. Value = 1 means it is pinned
    Should Be Equal    ${tc_pinned value}    1

TM002_TC012_verify user can pin and unpin a tag from setting page
    [Documentation]    Verify points:
    ...
    ...    -- First add a new tag. Click to unpin it. Verify unpin tag is not added automatically when visiting article
    ...
    ...    -- Open Settings>Tag. Click to pin tag again. Visit an article. Verify tag is added automatically to article in Homepage
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    # PREPARATION: TURN ON AUTO WEB JOURNAL AND AUTO CACHE. ADD A TAG TO AN ARTICLE THEN GO TO SETTING>TAGS
    Log To Console    Start preparing steps for a newly added tag
    go to setting's sub-page    Web Journal
    # enable auto web journal
    Click Element    ${setting_web journal_switch auto web journal}
    # enable auto cache
    Click Element    ${setting_web journal_switch auto cache}
    # save setting
    Click Element    ${setting_save setting_button}
    # open sample URL in the same tab
    Go To    ${gb_sample url}
    sleep    5s
    # go back to cofiddle
    Go To    http://${environment}.neeah.cvp.io/
    Comment    Click Element    ${homepage_signin button}
    sleep    5s
    # wait for web journal page load complete
    Wait Until Element Is Visible    ${wj_first item domain}
    # generate a tag name
    ${gb_sample tag name}    generate text    5
    # input tag to text field
    ${wj_note and tag field}    return true locator for text area of the first item
    Click Element    ${wj_note and tag field}
    Input Text    ${wj_note and tag field}    \#${gb_sample tag name}
    Press Key    ${wj_note and tag field}    \\13
    # open setting > Tag
    open settings page
    go to setting's sub-page    Tags
    # add a new tag
    Click Element    ${setting_tags_add tag textbox}
    ${tc_new tag}    generate text    10
    Input Text    ${setting_tags_add tag textbox}    ${tc_new tag}
    Press Key    ${setting_tags_add tag textbox}    \\13
    sleep    1s
    # delete the first tag
    Click Element    ${setting_tags_first trash button}
    Click Element    ${setting_security_confirm popup_ok button}
    sleep    1s
    # END OF PREPARATION
    Log To Console    end of preparation
    # ==================
    # get current pinned value of new tag that has recently added
    ${tc_current pinned value}    Get Value    ${setting_tags_first pinned value container}
    Should Be Equal    ${tc_current pinned value}    1
    # Click pinned button. Verify pinned value changed to 0
    Click Element    ${setting_tag_first pin button}
    ${tc_current pinned value}    Get Value    ${setting_tags_first pinned value container}
    Should Be Equal    ${tc_current pinned value}    0
    # go to any article
    Go To    ${gb_sample url 2}
    ${tc_visited domain}    get short domain from url    ${gb_sample url 2}
    sleep    5s
    # go back to Cofiddle and wait for the recently visited page is loaded on web journal page
    Go To    http://${environment}.neeah.cvp.io/
    Comment    Click Element    ${homepage_signin button}
    sleep    8s
    Wait Until Element Is Visible    //div[@class="item domain" and contains(text(),'${tc_visited domain}')]
    # verify the un-pinned tag is not added automatically
    Element Should Not Be Visible    //span[@class="tooltip" and contains(text(),'${tc_new tag}')]
    Log to console    Test un-pinned tag complete for browser. Please test again for extension. Un-pinned tag should not be added by default on browser and extension
    # go to Setting page again
    open settings page
    Comment    go to setting's sub-page    Tags
    # click pinned button again to unpin
    sleep    3s
    Click Element    ${setting_tag_first pin button}
    sleep    3s
    # get pinned value and verfiy it is 1
    ${tc_current pinned value}    Get Value    ${setting_tags_first pinned value container}
    Should Be Equal    ${tc_current pinned value}    1
    # go to any article
    Go To    ${gb_sample url 2}
    ${tc_visited domain}    get short domain from url    ${gb_sample url 2}
    sleep    5s
    # go back to Cofiddle and wait for the recently visited page is loaded on web journal page
    Go To    http://${environment}.neeah.cvp.io/
    Comment    Click Element    ${homepage_signin button}
    sleep    8s
    Wait Until Element Is Visible    //div[@class="item domain" and contains(text(),'${tc_visited domain}')]
    # verify the pinned tag is auto added to new page
    ${tc_flag}    Run Keyword And Return Status    Element Should Be Visible    //span[@class="tooltip" and contains(text(),'${tc_new tag}')]
    Run Keyword If    "${tc_flag}" == "False"    Log    BUG: Pinned tag is not added    Error    False    True
    Run Keyword If    "${tc_flag}" == "True"    write message    Pinned tag is added automatically
    Log to console    Test pinned tag complete for browser. Please test again for extension. Pinned tag should not be added automatically

TM002_TC013_Verify user can share a tag from Settings page.
    [Documentation]    Pre-condtions:
    ...
    ...    -- Create new account
    ...
    ...    -- Activate account
    ...
    ...    -- Login and Create new tag and share to default test account (cofiddle.qa@gmail.com / Abc123)
    ...
    ...    Verify points:
    ...
    ...    -- Verify the "un-share" icon shows in Sender's Tag list
    ...
    ...    -- Verify email of receiver shows in Sender's Tag list
    ...
    ...    -- Verify the shared tag name is shown on Receiver Tag List
    ...
    ...    -- Verify email of sender is shown in receiver's Tag list
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    go to setting's sub-page    Tags
    # generate a tag name
    ${gb_sample tag name}    generate text    5
    # input tag to setting new tag text field
    add and create a new tag    ${gb_sample tag name}
    # Activate account
    open and login gmail in the same browser    ${gb_gg_email}    ${gb_gg_password}
    open gmail item with specific subject    ${gb_email subject text_Welcome to Cofiddle!}
    Click Element    link=click here
    Select Window    new
    # go to Settings > Tags
    sleep    8s
    open settings page
    Comment    go to setting's sub-page    Tags
    # click share button of the first tag
    Click Element    ${setting_tags_first share button}
    Sleep    10s
    Comment    Wait Until Element Is Visible    //div[@id="dialogShare"]
    # input email and click Share button by Javascript
    Execute Javascript    $("#dialogShare .bootstrap-tagsinput input[placeholder='Email']").val('cofiddle.qa@gmail.com')
    Execute Javascript    $("#btnShare").click()
    # input default account to email text field of share dialog
    Comment    Click Element    css=div.bootstrap-tagsinput > input.ui-autocomplete-input
    Comment    Input Text    css=div.bootstrap-tagsinput > input.ui-autocomplete-input    ${gb_gg_email}
    Comment    Press Key    css=div.bootstrap-tagsinput > input.ui-autocomplete-input    \\13
    # Click Share button
    Comment    Click Element    css=#btnShare
    # verify unshare tag icon is visiabled in sender tag list
    sleep    5s
    Element Should Be Visible    ${setting_tags_unshare tag icon}
    # verify receiver's email account is visibled in sender tag list
    Element Should Be Visible    //a[@class="item"]//label[contains(text(),'${gb_gg_email}')]
    # sign out
    logout
    # open login page and login with receiver account
    Click Element    ${homepage_signin button}
    login    ${gb_gg_email}    ${gb_password}
    sleep    5s
    # open settings page > Tags
    open settings page
    go to setting's sub-page    Tags
    # verify shared tag is presented in receiver account
    Element Should Be Visible    //label[contains(text(),'${gb_sample tag name}')]
    # verify the email of sender is corrected
    Element Should Be Visible    //label[@data-bind="text:owner.email" and contains(text(),'${gb_email}')]

TM002_TC014_Verify user can unshare a tag from Settings page.
    [Documentation]    Pre-condtions:
    ...
    ...    -- Create new account
    ...
    ...    -- Activate account
    ...
    ...    -- Login and Create new tag and share to default test account (cofiddle.qa@gmail.com / Abc123)
    ...
    ...    -- Wait until Un-share button and Email of Receiver are presented
    ...
    ...    -- Login to Receiver account. Wait until shared tag name and email of sender are shown
    ...
    ...    -- Login back to Sender account and click Un-share button
    ...
    ...    Verify points:
    ...
    ...    -- Verify the "un-share" icon dismssed
    ...
    ...    -- Verify email of receiver dismissed
    ...
    ...    -- Login to Receiver account
    ...
    ...    -- Verify shared tag name is removed
    ...
    ...    -- Verify email of sender is removed
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    go to setting's sub-page    Tags
    # generate a tag name
    ${gb_sample tag name}    generate text    5
    # input tag to setting new tag text field
    add and create a new tag    ${gb_sample tag name}
    # Activate account
    open and login gmail in the same browser    ${gb_gg_email}    ${gb_gg_password}
    open gmail item with specific subject    ${gb_email subject text_Welcome to Cofiddle!}
    Click Element    link=click here
    Select Window    new
    # go to Settings > Tags
    sleep    8s
    open settings page
    # click share button of the first tag
    Click Element    ${setting_tags_first share button}
    Sleep    10s
    # input email and click Share button by Javascript
    Execute Javascript    $("#dialogShare .bootstrap-tagsinput input[placeholder='Email']").val('cofiddle.qa@gmail.com')
    Execute Javascript    $("#btnShare").click()
    # wait for unshare tag icon is visiabled in sender tag list
    sleep    5s
    Wait Until Element Is Visible    ${setting_tags_unshare tag icon}
    # wait for receiver's email account is visibled in sender tag list
    Wait Until Element Is Visible    //a[@class="item"]//label[contains(text(),'${gb_gg_email}')]
    # sign out
    logout
    # open login page and login with receiver account
    Click Element    ${homepage_signin button}
    login    ${gb_gg_email}    ${gb_password}
    sleep    5s
    # open settings page > Tags
    open settings page
    go to setting's sub-page    Tags
    # wait shared tag is presented in receiver account
    Wait Until Element Is Visible    //label[contains(text(),'${gb_sample tag name}')]
    # wait the email of sender is corrected
    Wait Until Element Is Visible    //label[@data-bind="text:owner.email" and contains(text(),'${gb_email}')]
    # ================
    # log out receiver account
    log out
    # open login page and login with SENDER account
    Click Element    ${homepage_signin button}
    login    ${gb_email}    ${gb_password}
    sleep    5s
    # open settings page > Tags
    open settings page
    go to setting's sub-page    Tags
    # wait shared tag is presented in receiver account
    Wait Until Element Is Visible    //label[contains(text(),'${gb_sample tag name}')]
    # Click un-share button
    Click Element    ${setting_tags_unshare tag icon}
    # Click OK to confirm
    Click Element    ${setting_security_confirm popup_ok button}
    # verify un-share tag button is dismissed
    Element Should Not Be Visible    ${setting_tags_unshare tag icon}
    # verify email of receiver is removed
    Element Should Not Be Visible    //a[@class="item"]//label[contains(text(),'${gb_gg_email}')]
    # =============
    # logout sender account
    logout
    # open login page and login with Receiver account
    Click Element    ${homepage_signin button}
    login    ${gb_gg_email}    ${gb_password}
    sleep    5s
    # open settings page > Tags
    open settings page
    go to setting's sub-page    Tags
    # Verify shared tag is removed in receiver account
    Element Should Not Be Visible    //label[contains(text(),'${gb_sample tag name}')]    # dynamic locator of tag name
    # verify email of sender is removed
    Element Should Not Be Visible    //label[@data-bind="text:owner.email" and contains(text(),'${gb_email}')]    # dynamic locator of sender's email

TM002_TC015_Verify user can edit tag name from setting page
    [Documentation]    Pre-condtions:
    ...
    ...    -- Create new account
    ...
    ...    -- Enable auto web journal and cache
    ...
    ...    -- Visit sample page
    ...
    ...    -- Back to Cofiddle
    ...
    ...    -- Add a tag
    ...
    ...    -- Open Settings>Tags
    ...
    ...    -- Change tag name
    ...
    ...    Verify points:
    ...
    ...    -- Verify tag name is changed in settings page
    ...
    ...    -- Verify tag name is changed in Web Journal
    ...
    ...    -- Old tag name is not shown anymore
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    go to setting's sub-page    Web Journal
    enable auto web journal and auto cache
    visit sample page
    # back to Cofiddle
    go to coffidle
    # wait for web journal page load complete
    Wait Until Element Is Visible    ${wj_first item domain}
    sleep    5s
    input and submit a random tag to the first item
    # wait until tag is appearred
    Wait Until Element Is Visible    //span[@class="tooltip" and contains(text(),"${gb_sample tag name}")]
    # go to settings>Tag
    open settings page
    go to setting's sub-page    Tags
    # wait for the tag is presented
    Wait Until Element Is Visible    //label[contains(text(),'${gb_sample tag name}')]
    # click rename tag button
    Click Element    ${setting_tags_first rename button}
    # clear text box
    Clear Element Text    ${setting_tag_first edit tag name textbox}
    ${tc_new tag name}    generate text    10
    Input Text    ${setting_tag_first edit tag name textbox}    ${tc_new tag name}
    Press Key    ${setting_tag_first edit tag name textbox}    \\13
    # wait for new tag name is applied in Settings page
    sleep    1s
    # verify new name is applied, old name is not visibled
    Element Text Should Be    ${setting_tags_first added name tag field}    ${tc_new tag name}
    Element Should Not Be Visible    //label[@class="tag-of-user" and contains(text(),'${gb_sample tag name}')]
    # go back to web journal
    go to webjournal-history from settings page
    #wait until Web Journal loaded completely
    Wait Until Element Is Visible    ${wj_first item domain}
    # verify the new tag name is applied and the old tag name is not presented
    ${temp}    get text    //span[@class="tooltip"]
    Should Not Be Equal    ${temp}    ${gb_sample tag name}
    Should Be Equal    ${temp}    ${tc_new tag name}
    Element Should Not Be Visible    //span[@class="tooltip" and contains(text(),"${gb_sample tag name}")]

TM002_TC016_Verify user can delete a tag from Settings page, deleted tag will be removed from all History items it was attached with.
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    go to setting's sub-page    Web Journal
    enable auto web journal and auto cache
    visit sample page
    # back to Cofiddle
    go to coffidle
    # wait for web journal page load complete
    Wait Until Element Is Visible    ${wj_first item domain}
    sleep    5s
    input and submit a random tag to the first item
    # wait until tag is appearred
    Wait Until Element Is Visible    //span[@class="tooltip" and contains(text(),"${gb_sample tag name}")]
    # go to settings>Tag
    open settings page
    go to setting's sub-page    Tags
    # wait for the tag is presented
    Wait Until Element Is Visible    //label[contains(text(),'${gb_sample tag name}')]
    # click Delete the first tag elements
    Click Element    ${setting_tags_first trash button}
    # click confirm
    Click Element    ${setting_security_confirm popup_ok button}
    # verify tag is not presented in tag list anymore
    Element Should Not Be Visible    //label[contains(text(),'${gb_sample tag name}')]
    # go back to history
    go to webjournal-history from settings page
    # verify tag is removed from item in history
    Element Should Not Be Visible    //span[@class="tooltip" and contains(text(),"${gb_sample tag name}")]

TM002_TC017_Verify user can follow a shared tag and can search by that tag after following.
    [Documentation]    This test case is blocked because the feature has not implemented yet.
    [Tags]    blocked
    [Setup]    setup browser with extension_create account_close all ftue
    open settings page
    go to setting's sub-page    Web Journal
    enable auto web journal and auto cache
    visit sample page
    # back to Cofiddle
    go to coffidle
    # wait for web journal page load complete
    Wait Until Element Is Visible    ${wj_first item domain}
    sleep    5s
    input and submit a random tag to the first item
    # wait until tag is appearred
    Wait Until Element Is Visible    //span[@class="tooltip" and contains(text(),"${gb_sample tag name}")]
    # Activate account
    open and login gmail in the same browser    ${gb_gg_email}    ${gb_gg_password}
    open gmail item with specific subject    ${gb_email subject text_Welcome to Cofiddle!}
    Click Element    link=click here
    Select Window    new
    sleep    8s
    # go to settings>Tag
    open settings page
    go to setting's sub-page    Tags
    # wait for the tag is presented
    Wait Until Element Is Visible    //label[contains(text(),'${gb_sample tag name}')]
    # click share button of the first tag
    Click Element    ${setting_tags_first share button}
    Sleep    10s
    # input email and click Share button by Javascript
    Execute Javascript    $("#dialogShare .bootstrap-tagsinput input[placeholder='Email']").val('cofiddle.qa@gmail.com')
    Execute Javascript    $("#btnShare").click()
    Wait Until Element Is Visible    ${setting_tags_unshare tag icon}
