*** Settings ***
Library           ExtendedSelenium2Library
Resource          ../Variables/global_variables.txt    # load the global variables file
Resource          ../Interfaces/Homepage.txt
Resource          ../Keywords/checking_keywords.txt
Resource          ../Keywords/generals_keywords.txt
Resource          ../Variables/global_variables.txt
Library           String
Library           string
Resource          ../Interfaces/entrance_page.txt
Resource          ../Interfaces/signup_page.txt
Resource          ../Interfaces/web_journal_page.txt
Resource          ../Interfaces/login_page.txt
Resource          ../Interfaces/settings_page.txt
Resource          ../Keywords/setup.txt
Resource          ../Keywords/gmail.txt

*** Test Cases ***
TM001_TC019_Verify user can cancel at the step chosing Google account.
    [Documentation]    TM001_TC019_Verify user can cancel at the step chosing Google account.
    [Tags]    test
    open cofiddle
    # Go to "Entrance page" by clicking on "Create free account" button on top right corner.
    Click Element    ${homepage_signup button}
    Click Element    ${entrance_sign up with google button}
    Select Window    Sign in - Google Accounts
    Wait Until Element Is Visible    ${gg_email txt field}
    Input Text    ${gg_email txt field}    ${gb_gg_email}
    Click Element    ${gg_next btn}
    Wait Until Element Is Visible    ${gg_signin btn}
    Close Window
    Select Window    Cofiddle
    Wait Until Element Is Visible    ${entrance_sign up with email button}
    Element Should Be Visible    ${entrance_sign up with email button}

TM001_TC020_verify user can sign up with Google account.
    [Documentation]    TM001_TC020_verify user can sign up with Google account.
    [Tags]    test
    open cofiddle
    Click Element    ${homepage_signup button}
    Click Element    ${entrance_sign up with google button}
    Select Window    Sign in - Google Accounts
    Input Text    ${gg_email txt field}    ${gb_gg_email}
    Click Element    ${gg_next btn}
    Input Text    ${gg_password txt field}    ${gb_gg_password}
    ${temp}    List Windows
    Click Element    ${gg_signin btn}
    Select Window    Cofiddle - History
    sleep    5s    # sleep to wait for Google login process
    Element Should Be Visible    ${wj_left panel_recent}

test
    [Tags]    test
    [Setup]
    open cofiddle
    create account with email
    Wait Until Element Is Visible    ${wj_welcome popup}
    # close step 1 and step 2
    Click Element    ${wj_close popup icon}
    Click Element    ${wj_close popup icon}    # step 3 is shown after this step
    Close Browser
    # open gmail
    open and login gmail in a new window    ${gb_gg_email}    ${gb_gg_password}
    open gmail item with specific subject    ${gb_email subject text_Welcome to Cofiddle!}
    ${tc_temp}    get text    //div/p[2]/a
    Close Browser
    Comment    open mailinator inbox    ${gb_email}
    Comment    # click to open Welcome email
    Comment    Click Element    //div[@class="innermail ng-binding" and contains(text(),'Welcome to Cofiddle!')]
    Comment    # get the active URL in welcome email
    Comment    Select Frame    id=publicshowmaildivcontent
    Comment    ${tc_temp}    get text    //p[5]
    Comment    Delete All Cookies
    Comment    Close Browser
    Open Browser    ${tc_temp}    gc
    login    ${gb_email}    Abc123
    Wait Until Element Is Visible    ${wj_new ftue popup_header}
    # verify text of step 4
    Element Text Should Be    ${wj_new ftue popup_header}    Congrats, easy right? Almost done
    Element Text Should Be    ${wj_new ftue popup_ftue description}    Now open a new browser tab and visit your favorite website you will see the Cofiddle squirrel icon in the bottom right. Just click the squirrel and you can access on page highlighting, annotation, sharing and favoriting.
    Element Should Be Visible    //img[@class="image-tour"]    # verify image is present, but we could not see the image is loaded or is corrected. Please do it manually
    Capture Page Screenshot
    Log    Please check the image is loaded correctly as design. We could not handle it by auto script    WARN
    Element Should Be Visible    //input[@id="btnFtueAction" and @value="Try it now"]

testtest
    Open Chrome with Extension    http://www.cofiddle.com

*** Keywords ***
Open Chrome with Extension
    [Arguments]    ${url}
    ${exclude_switches}    Create List    test-type
    ${chrome_args}    Create List    disable-infobars
    ${chrome_options}    Create Dictionary    excludeSwitches=${exclude_switches}    args=${chrome_args}
    ${capacities}    Create Dictionary    chromeOptions=${chrome_options}
    Create Webdriver    Chrome    desired_capabilities=${capacities}
    Go To    ${url}
